class Solution {
public:
    bool helper(vector<int>&nums,vector<int>&changeIndicesz,int s){
        int n=nums.size();
        vector<int>last(n,-1);
        for(int i=0;i<=s;i++){
            last[changeIndicesz[i]]=i;
        }
        int comp=0;int power=0;
        for(int i=0;i<=s;i++){
            if(i==last[changeIndicesz[i]]){
                if(nums[changeIndicesz[i]]>power)return false;
                power-=nums[changeIndicesz[i]];
                comp++;
            }
            else {
                power++;
            }
        }
        return comp==n;
    }
    int earliestSecondToMarkIndices(vector<int>& nums, vector<int>& changeIndices) {
        int n=nums.size(),m=changeIndices.size();
        vector<int>changeIndicesz=changeIndices;
        for(auto &i:changeIndicesz)i--;
        int l=0,h=m-1,ans=-1;
        while(l<=h){
            int mid=(l+h)/2;
            if(helper(nums,changeIndicesz,mid)){
                ans=mid;h=mid-1;
            }
            else l=mid+1;
        }
        return ans==-1?-1:ans+1;
    }
};
